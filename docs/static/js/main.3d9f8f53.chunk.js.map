{"version":3,"sources":["components/Note.js","components/AddNotes.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","AddNotes","Search","handleSearchNote","type","Header","handleToggleDarkMode","darkMode","localStorage","setItem","src","initialData","nanoid","App","setNotes","searchText","setSearchText","setDarkMode","useEffect","savedTheme","JSON","parse","getItem","savedNotes","console","log","saveNewNotesData","data","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d9f8f53.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md'\r\n\r\nconst Note = ({ id, text, date, handleDeleteNote }) => {\r\n    return (\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever onClick={()=> handleDeleteNote (id)} \r\n                className=\"delete-icon\" size=\"1.3em\" />\r\n            </div>\r\n        </div>\r\n    )\r\n  };\r\n  \r\n  export default Note;","import { useState } from 'react';\r\n\r\nconst AddNote = ({ handleAddNote }) => {\r\n\tconst [noteText, setNoteText] = useState('');\r\n\tconst characterLimit = 200;\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tif (characterLimit - event.target.value.length >= 0) {\r\n\t\t\tsetNoteText(event.target.value);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSaveClick = () => {\r\n\t\tif (noteText.trim().length > 0) {\r\n\t\t\thandleAddNote(noteText);\r\n\t\t\tsetNoteText('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='note new'>\r\n\t\t\t<textarea\r\n\t\t\t\trows='8'\r\n\t\t\t\tcols='10'\r\n\t\t\t\tplaceholder='Ketik untuk menambahkan catatan...'\r\n\t\t\t\tvalue={noteText}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></textarea>\r\n\t\t\t<div className='note-footer'>\r\n\t\t\t\t<small>\r\n\t\t\t\t\t{characterLimit - noteText.length} Kata\r\n\t\t\t\t</small>\r\n\t\t\t\t<button className='save' onClick={handleSaveClick}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddNote;","import Note from './Note';\r\nimport AddNotes from './AddNotes'\r\n\r\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\r\n    return (\r\n        <div className=\"notes-list\">\r\n            {notes.map((note) => \r\n                <Note id={note.id} \r\n                text={note.text} \r\n                date={note.date} \r\n                handleDeleteNote={handleDeleteNote}\r\n                />\r\n            )}\r\n            <AddNotes handleAddNote={handleAddNote} />\r\n        </div>\r\n    );\r\n  };\r\n  \r\n  export default NotesList;","import React from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\nconst Search = ({handleSearchNote}) => {\r\n    return (\r\n    <div className=\"search\">\r\n        <MdSearch className=\"search-icons\" size=\"1.3em\" />\r\n        <input \r\n        onChange={(event)=>handleSearchNote(event.target.value)} \r\n        type=\"text\" \r\n        placeholder=\"Ketik untuk mencari...\" />\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst Header = ({ handleToggleDarkMode,darkMode }) => {\r\n\r\n    const handleDarkMode = () => {\r\n        handleToggleDarkMode(!darkMode)         \r\n\t\tlocalStorage.setItem('react-note-theme-data',!darkMode)\r\n    }\r\n    return (\r\n        <div className='header'>\r\n            <h1>Catatanmu</h1>\r\n            <button onClick={handleDarkMode} className='save'>\r\n                <img src=\"https://img.icons8.com/material-outlined/24/000000/quick-mode-on--v1.png\" />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nconst initialData = [\n\t{\n\t\tid: nanoid(),\n\t\ttext: 'This is my first note!',\n\t\tdate: '15/04/2021',\n\t},\n\t{\n\t\tid: nanoid(),\n\t\ttext: 'This is my second note!',\n\t\tdate: '21/04/2021',\n\t},\n\t{\n\t\tid: nanoid(),\n\t\ttext: 'This is my third note!',\n\t\tdate: '28/04/2021',\n\t},\n\t{\n\t\tid: nanoid(),\n\t\ttext: 'This is my new note!',\n\t\tdate: '30/04/2021',\n\t},\n]\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\n\tconst [searchText, setSearchText] = useState('');\n\n\tconst [darkMode, setDarkMode] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst savedTheme = JSON.parse(\n    localStorage.getItem('react-note-theme-data')\n    );\n\t\t\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\n    console.log(savedTheme)\n\n    if (savedTheme)  {             \n      setDarkMode(savedTheme)      \n    } else {             \n      setDarkMode(false)          \n    }\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t} else {\n\t\t\tsetNotes(initialData)\n\t\t}\n\t}, []);\n\n\tconst saveNewNotesData = (data) => {\n\t\tsetNotes(data);\n\t\tlocalStorage.setItem(\n\t\t\t'react-notes-app-data',\n\t\t\tJSON.stringify(data)\n\t\t);\n\t}\n\n\tconst addNote = (text) => {\n\t\tconst date = new Date();\n\t\tconst newNote = {\n\t\t\tid: nanoid(),\n\t\t\ttext: text,\n\t\t\tdate: date.toLocaleDateString(),\n\t\t};\n\t\tconst newNotes = [...notes, newNote];\n\t\tsaveNewNotesData(newNotes);\n\t};\n\n\tconst deleteNote = (id) => {\n\t\tconst newNotes = notes.filter((note) => note.id !== id);\n\t\tsaveNewNotesData(newNotes);\n\t};\n\n\treturn (\n\t\t<div className={`${darkMode && 'dark-mode'}`}>\n\t\t\t<div className='container'>\n\t\t\t\t<Header handleToggleDarkMode={setDarkMode} darkMode={darkMode} />\n\t\t\t\t<Search handleSearchNote={setSearchText} />\n\t\t\t\t<NotesList\n\t\t\t\t\tnotes={notes.filter((note) =>\n\t\t\t\t\t\tnote.text.toLowerCase().includes(searchText)\n\t\t\t\t\t)}\n\t\t\t\t\thandleAddNote={addNote}\n\t\t\t\t\thandleDeleteNote={deleteNote}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}